import type { NextPage } from 'next'
import Head from 'next/head'
import { trpc } from '../utils/trpc'
import { signIn, signOut, useSession } from 'next-auth/react'
import { useRouter } from 'next/router'
import { Button, Grid, Text } from '@nextui-org/react'
import UserInfo from '../components/user-info'

const Home: NextPage = () => {
  const router = useRouter()
  const { data: session, status } = useSession()
  const loading = status === 'loading'
  const hello = trpc.useQuery(['hello', { text: 'from tRPC' }])
  const exampleData = trpc.useQuery(['example'])
  const { invalidateQueries } = trpc.useContext()
  const createExample = trpc.useMutation('create-example', {
    onSuccess: () => invalidateQueries('example'),
  })

  return (
    <>
      <Head>
        <title>OverTrack</title>
        <meta name="description" content="Generated by create t3 app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <UserInfo session={session} status={status} />
      <div className="m-20" />
      <div className="flex flex-col items-center justify-center w-1/2 mx-auto">
        <Text
          h1
          weight={'extrabold'}
          size={100}
          css={{
            textGradient: '45deg, $yellow600 -20%, $red600 100%',
          }}
        >
          {/* TODO: Why does it cut off the K? */}
          OverTrack.
        </Text>
        <Text h4 color="primary">
          the best way to track your Overwatch matches
        </Text>
        <div className="m-5" />
        <Grid.Container justify="center" gap={2}>
          {!session?.user && (
            <Grid>
              <Button auto onClick={() => signIn()}>
                Sign in
              </Button>
            </Grid>
          )}
          <Grid>
            <Button auto onClick={() => router.push('/dashboard')}>
              Dashboard
            </Button>
          </Grid>
        </Grid.Container>
      </div>
      {/* <div className="flex flex-col items-center justify-center w-1/2 min-h-screen mx-auto">
        <div className="py-6 text-2xl">{hello.data ? <p>{hello.data.greeting}</p> : <p>Loading..</p>}</div>
        <div className="py-6 text-2xl">
          <p>Data from Prisma:</p>
          {exampleData.data ? (
            <div>
              {exampleData.data.length === 0 ? (
                <p className="text-2xl">No data available, create new!</p>
              ) : (
                exampleData.data.map(({ id }: any) => <p key={id}>{id}</p>)
              )}
            </div>
          ) : (
            <p>Loading...</p>
          )}
        </div>
        <Button onClick={() => createExample.mutate()}>Create New Example</Button>
        {!session && (
          <>
            <span>You are not signed in</span>
            <a
              href={`/api/auth/signin`}
              onClick={(e) => {
                e.preventDefault()
                signIn()
              }}
            >
              Sign in
            </a>
          </>
        )}
        {session?.user && <Button onPress={() => router.push('/dashboard')}>Go to dashboard</Button>}
      </div> */}
    </>
  )
}

export default Home
