// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["referentialIntegrity"]
}

// Next-auth will not work with SQLite, so default here is mysql.
datasource db {
  provider             = "postgresql"
  url                  = env("DATABASE_URL")
  referentialIntegrity = "prisma"
}

// Can be removed
model Example {
  id String @id @default(cuid())
}

// Neccessary for Next auth

model Account {
  id                String  @id @default(cuid())
  userId            String
  type              String
  provider          String
  providerAccountId String
  refresh_token     String? @db.Text
  access_token      String? @db.Text
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String? @db.Text
  session_state     String?

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}

model Session {
  id           String   @id @default(cuid())
  sessionToken String   @unique
  userId       String
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model User {
  id              String          @id @default(cuid())
  name            String?
  email           String?         @unique
  emailVerified   DateTime?
  image           String?
  accounts        Account[]
  sessions        Session[]
  battle_accounts BattleAccount[]
}

model VerificationToken {
  identifier String
  token      String   @unique
  expires    DateTime

  @@unique([identifier, token])
}

// My own models

model BattleAccount {
  id     String       @id @default(cuid())
  userId String
  name   String
  user   User         @relation(fields: [userId], references: [id], onDelete: Cascade)
  match  QuickMatch[]
}

enum GameResult {
  WIN
  LOSE
  DRAW
}

enum Role {
  TANK
  SUPPORT
  DAMAGE
}

enum MapType {
  Assault
  Escort
  Control
  Hybrid
}

enum Hero {
  ANA
  ASHE
  BAPTISTE
  BASTION
  BRIGITTE
  CASSIDY
  DVA
  DOOMFIST
  ECHO
  GENJI
  HANZO
  JUNKRAT
  LUCIO
  MEI
  MERCY
  MOIRA
  ORISA
  PHARAH
  REAPER
  REINHARDT
  ROADHOG
  SIGMA
  SOLDIER
  SOMBRA
  SYMMETRA
  TORBJORN
  TRACER
  WIDOWMAKER
  WINSTON
  WRECKING_BALL
  ZARYA
  ZENYATTA
}

enum Map {
  BLIZZARD_WORLD
  BUSAN
  DORADO
  EICHENWALDE
  HANAMURA
  HAVANA
  HOLLYWOOD
  HORIZON_LUNAR_COLONY
  ILLIOS
  JUNKERTOWN
  KINGS_ROW
  LIJIANG_TOWER
  NEPAL
  NUMBANI
  OASIS
  PARIS
  RIALTO
  ROUTE_66
  TEMPLE_OF_ANUBIS
  VOLSKAYA
  GIBRALTER
}

model QuickMatch {
  id              String         @id @default(cuid())
  BattleAccount   BattleAccount? @relation(fields: [battleAccountId], references: [id])
  battleAccountId String?
  result          GameResult
  role            Role
  hero            Hero[]
  mapType         MapType
  map             Map
  playedAt        DateTime       @default(now())
}
